// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id            String   @id @default(uuid()) @map("id")
  isDraft       Boolean  @map("is_draft")
  type          String
  title         String
  userId        String @map("user_id")
  description   String
  videoUrl      String   @map("video_url")
  photoUrl      String   @map("photo_url")
  quote         String
  quoteAuthor   String   @map("quote_author")
  content       String
  tags          Tag[]
  comments      Comment[]
  linkUrl       String   @map("link_url")
  likesCount    Int      @map("likes_count")
  commentsCount Int      @map("comments_count")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@index([title])
  @@map("posts")
}

model Tag {
  id        String  @id @default(uuid())
  title     String
  posts     Post[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@index([title])
  @@map("tags")
  }

model Comment {
  id          String    @id @default(uuid())
  message     String
  userId      String    @map("user_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  post        Post      @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId      String    @map("post_id")

  @@index([postId])
  @@map("comments")
}
